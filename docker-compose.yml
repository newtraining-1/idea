version: "3.8"

services:
  frontend:
    image: workspacebuilder/frontend
    container_name: frontend
    ports:
      - "4000:80"
    restart: always
    depends_on:
      - webapi

  webapi:
    image: workspacebuilder/backend
    container_name: webapi
    ports:
      - "4003:3003"
    restart: always
    depends_on:
      - postgrest
      - restheart
      - keycloak

  postgrest:
    image: postgrest/postgrest
    container_name: postgrest
    ports:
      - "3000:3000"
    environment:
      - PGRST_DB_URI=${POSTGREST_DB_URI}
      - PGRST_DB_ANON_ROLE=${POSTGREST_DB_ANON_ROLE}
      - POSTGRES_RELOAD_ON_SCHEMA_CHANGE=true
    restart: always

  restheart:
    image: softinstigate/restheart:latest
    container_name: restheart
    ports:
      - "9080:8080"
    environment:
      - RHO=/mclient/connection-string->"${MONGO_CONNECTION_STRING}"; /http-listener/host->"0.0.0.0"; /mongo/mongo-mounts[1]/what->"*";
    restart: always

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak-server
    ports:
      - "8080:8080"
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KC_BOOTSTRAP_ADMIN_USERNAME}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KC_BOOTSTRAP_ADMIN_PASSWORD}
      - KC_DB=${KC_DB}
      - KC_DB_URL=${KC_DB_URL}
      - KC_DB_USERNAME=${KC_DB_USERNAME}
      - KC_DB_PASSWORD=${KC_DB_PASSWORD}
      - KC_HOSTNAME_STRICT=false
      - KC_PROXY_HEADERS=xforwarded
      - KC_HTTP_ENABLED=true
    command: ["start"]
    restart: always

  redis:
    image: redis:6
    container_name: ap-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: always

  activepieces:
    image: workspacebuilder/activepieces:1
    container_name: activepieces
    ports:
      - "7080:80"   # Changed to 8081 to avoid conflict with Keycloak (also on 8080)
    env_file:
      - .env
    depends_on:
      - redis
    restart: always

volumes:
  redis-data:


